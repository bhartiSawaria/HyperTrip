[{"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\index.js":"1","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\App.js":"3","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\reducers\\index.js":"4","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\reducers\\auth.js":"5","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\actions\\index.js":"6","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Error\\Error.js":"7","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\Signup\\Signup.js":"8","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\Login\\Login.js":"9","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Navbar\\Navbar.js":"10","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\actions\\actionTypes.js":"11","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\actions\\auth.js":"12","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\fetchWrapper.js":"13","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\SearchForm\\SearchForm.js":"14","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Bus\\Bus.js":"15","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Backdrop\\Backdrop.js":"16","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\AddBusForm\\AddBusForm.js":"17","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\BusDetails\\BusDetails.js":"18","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\HomePage\\HomePage.js":"19","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\MainSection\\MainSection.js":"20"},{"size":808,"mtime":1611163983531,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":2425,"mtime":1611571227528,"results":"24","hashOfConfig":"22"},{"size":176,"mtime":1611149451342,"results":"25","hashOfConfig":"22"},{"size":1027,"mtime":1611149444831,"results":"26","hashOfConfig":"22"},{"size":62,"mtime":1611148954177,"results":"27","hashOfConfig":"22"},{"size":144,"mtime":1611132541570,"results":"28","hashOfConfig":"22"},{"size":9132,"mtime":1611638952424,"results":"29","hashOfConfig":"22"},{"size":5299,"mtime":1611571334972,"results":"30","hashOfConfig":"22"},{"size":4740,"mtime":1611569150898,"results":"31","hashOfConfig":"22"},{"size":108,"mtime":1611148933424,"results":"32","hashOfConfig":"22"},{"size":391,"mtime":1611149107973,"results":"33","hashOfConfig":"22"},{"size":1524,"mtime":1611487647247,"results":"34","hashOfConfig":"22"},{"size":4441,"mtime":1611569000281,"results":"35","hashOfConfig":"22"},{"size":1276,"mtime":1611559857193,"results":"36","hashOfConfig":"22"},{"size":238,"mtime":1611235332443,"results":"37","hashOfConfig":"22"},{"size":5712,"mtime":1611560913105,"results":"38","hashOfConfig":"22"},{"size":8238,"mtime":1611571823168,"results":"39","hashOfConfig":"22"},{"size":242,"mtime":1611252722500,"results":"40","hashOfConfig":"22"},{"size":6078,"mtime":1611569289211,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ljp1fx",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\index.js",[],["89","90"],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\App.js",["91","92"],"\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from './components/Navbar/Navbar';\nimport Signup from './containers/Signup/Signup';\nimport Login from './containers/Login/Login';\nimport Error from './components/Error/Error';\nimport MainSection from './containers/MainSection/MainSection';\nimport BusDetails from './containers/BusDetails/BusDetails';\nimport HomePage from './containers/HomePage/HomePage';\n\nimport * as actionCreators from './actions/index';\nimport classes from './App.module.css';\n\nclass App extends Component{\n\n  componentDidMount(){\n    const token = localStorage.getItem('token');\n    const userDetails = JSON.parse(localStorage.getItem('userDetails'));\n    if( token && userDetails ){\n      this.props.setStatusToLogin(userDetails, token);\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  logoutHandler = () => {\n    this.props.setStatusToLogout();\n    return this.props.history.push('/login');\n    // <Redirect to='/'/>\n  }\n\n  render(){\n    const isAuth = this.props.isAuth;\n    return (\n      <BrowserRouter>\n        <div className={classes.RootContainer}>\n          <Navbar isAuth={isAuth} userInfo={this.props.userInfo} logoutHandler={this.logoutHandler} />\n          <div className={classes.ContentContainer}>\n            <Switch>\n              {!isAuth ? <Route exact path='/signup' component={Signup}/> : null }\n              {!isAuth ? <Route exact path='/login' component={Login} /> : null }\n              {isAuth ? <Route path='/dashboard' component={MainSection} /> : null }\n              {isAuth ? <Route path='/bus-details/:busId' component={BusDetails} isAdmin={this.props.userInfo.isAdmin} /> : null }\n              <Route exact path='/error' component={Error} />\n              <Route path='/' component={Login} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    userInfo: state.auth.userDetails\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStatusToLogin: (userDetails, token) => dispatch(actionCreators.setStatusToLogin(userDetails, token)),\n    setStatusToLogout: () => dispatch(actionCreators.setStatusToLogout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\reducers\\auth.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\actions\\index.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Error\\Error.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\Signup\\Signup.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\Login\\Login.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Navbar\\Navbar.js",["93"],"\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { BsSearch, BsCardList } from 'react-icons/bs';\r\nimport { BiLogOut, BiUserPlus, BiArrowFromLeft, BiPlus } from 'react-icons/bi';\r\n\r\nimport Logo from '../../assets/Images/Logo2.jpg';\r\nimport classes from './Navbar.module.css';\r\n\r\nclass Navigation extends Component{\r\n\r\n    state={\r\n        prevPath: ''\r\n    }\r\n\r\n    getElements = () => {\r\n        const searchElement = document.getElementById('navSearch');\r\n        const viewElement = document.getElementById('navView');\r\n        const addElement = document.getElementById('navAdd');\r\n        return [searchElement, viewElement, addElement];\r\n    }\r\n\r\n    addActiveStyleHandler = () => {\r\n        const [searchElement, viewElement, addElement] = this.getElements();\r\n        const path = this.props.location.pathname;\r\n        this.setState({prevPath: path});\r\n        if(path.includes('search')){\r\n            searchElement.style.color = 'white';\r\n            viewElement.style.color = 'black';\r\n            if(addElement)\r\n                addElement.style.color = 'black';\r\n        }\r\n        else if(path.includes('add')){\r\n            searchElement.style.color = 'black';\r\n            viewElement.style.color = 'black';\r\n            addElement.style.color = 'white';\r\n        }\r\n        else if(!path.includes('dashboard')){\r\n            searchElement.style.color = 'black';\r\n            viewElement.style.color = 'black';\r\n            if(addElement)\r\n                addElement.style.color = 'black';\r\n        }\r\n        else{\r\n            searchElement.style.color = 'black';\r\n            viewElement.style.color = 'white';\r\n            if(addElement)\r\n                addElement.style.color = 'black';\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.isAuth)\r\n            this.addActiveStyleHandler();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const path = this.props.location.pathname;\r\n        if(this.props.isAuth)\r\n            if(this.state.prevPath != path){\r\n                this.addActiveStyleHandler();\r\n            }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={classes.RootContainer}>\r\n                <div className={classes.IconContainer}>\r\n                    <img src={Logo} alt='Logo'/>\r\n                    <span> HyperTrip </span>\r\n                </div>\r\n                <ul>\r\n                    {!this.props.isAuth ? (\r\n                        <li>\r\n                            <BiArrowFromLeft size={25}/>\r\n                            <NavLink to='/Login' activeStyle={{color: 'white'}}>Login</NavLink>\r\n                        </li>\r\n                    ) : null}\r\n\r\n                    {!this.props.isAuth ? (\r\n                        <li>\r\n                            <BiUserPlus size={25}/>\r\n                            <NavLink to='/signup' activeStyle={{color: 'white'}}>Signup</NavLink>    \r\n                        </li> \r\n                    ) : null}\r\n              \r\n                    {this.props.isAuth ? (\r\n                        <li>\r\n                            <BsSearch style={{marginRight: \"10px\"}}/>\r\n                            <NavLink \r\n                                to='/dashboard/search' \r\n                                id='navSearch' >Search Bus</NavLink>\r\n                        </li>\r\n                    ) : null}\r\n                \r\n                    {this.props.isAuth ? (\r\n                        <li>\r\n                            <BsCardList style={{marginRight: \"10px\"}}/>\r\n                            <NavLink \r\n                                to='/dashboard/view-all' \r\n                                id='navView'>View All</NavLink>\r\n                        </li>\r\n                    ) : null}\r\n\r\n                    {this.props.isAuth && this.props.userInfo && this.props.userInfo.isAdmin ? (\r\n                        <li>\r\n                            <BiPlus style={{marginRight: \"10px\"}}/>\r\n                            <NavLink \r\n                                to='/dashboard/add' \r\n                                id='navAdd'>Add Bus</NavLink>\r\n                        </li>\r\n                    ) : null}\r\n                \r\n                    {this.props.isAuth ? (\r\n                        <li>\r\n                            <BiLogOut size={25} style={{marginRight: \"10px\", position: 'absolute', left: '30px'}}/>\r\n                            <div className={classes.LogoutDiv} onClick={this.props.logoutHandler}>Logout</div>\r\n                        </li>\r\n                    ) : null}\r\n                    \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\actions\\actionTypes.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\actions\\auth.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\fetchWrapper.js",[],["94","95"],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\SearchForm\\SearchForm.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Bus\\Bus.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\components\\Backdrop\\Backdrop.js",[],["96","97"],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\AddBusForm\\AddBusForm.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\BusDetails\\BusDetails.js",["98","99","100"],"\r\nimport React, { Component } from 'react';\r\nimport { FaBity } from \"react-icons/fa\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport fetcher from '../../fetchWrapper';\r\nimport classes from './BusDetails.module.css';\r\n\r\nclass BusDetails extends Component {\r\n\r\n    state = {\r\n        busId: this.props.match.params.busId,\r\n        bus: this.props.location.data.bus,\r\n        bookedSeats: [],\r\n        bookedSeatNumbers: [],\r\n        selectedSeats: [],\r\n        bookedBy: {},\r\n        isBooked: false,\r\n        hideUserDetails: true,\r\n        clickedSeat: '',\r\n        showMsg: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getBusDetails();\r\n    }\r\n\r\n    getBusDetails = async() => {\r\n        const busId = this.state.busId;\r\n        const result = await fetcher('/booked-seats/' + busId, 'GET');\r\n        console.log(result);                                            // remove later\r\n        if(!result.success){\r\n            return this.props.history.push('/error');\r\n        }\r\n        const bookedSeatNumbers = result.bookedSeats.map(seat => seat.number);\r\n        this.setState({bookedSeatNumbers: bookedSeatNumbers, bookedSeats: result.bookedSeats});\r\n    }\r\n\r\n    seatClickHandler = async(event) => {\r\n        const id = event.target.id;\r\n        this.setState({hideUserDetails: false, clickedSeat: id});\r\n        if(this.props.userInfo && this.props.userInfo.isAdmin){\r\n            if(event.target.className.includes('Grey')){\r\n                this.state.bookedSeats.forEach(seat => {\r\n                    if(seat.number == id){\r\n                        this.setState({bookedBy: {...seat.bookedBy}, isBooked: true});\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                this.setState({isBooked: false});\r\n            }\r\n        }\r\n        else{\r\n            if(event.target.className.includes('Indigo')){\r\n                event.target.className = classes.Blue;\r\n                const updatedSelectedSeats = [...this.state.selectedSeats];\r\n                updatedSelectedSeats.push(event.target.id);\r\n                this.setState({selectedSeats: updatedSelectedSeats}, () => console.log(this.state));\r\n            }\r\n            else if(event.target.className.includes('Blue')){\r\n                event.target.className = classes.Indigo;;\r\n                const updatedSelectedSeats = [...this.state.selectedSeats];\r\n                const index = updatedSelectedSeats.indexOf(event.target.id);\r\n                updatedSelectedSeats.splice(index, 1);\r\n                this.setState({selectedSeats: updatedSelectedSeats}, () => console.log(this.state));\r\n            }\r\n        }\r\n    }\r\n\r\n    buyTicketHandler = async() => {\r\n        if(this.state.selectedSeats.length === 0)\r\n            return;\r\n        const body = {\r\n            busId: this.state.busId,\r\n            selectedSeats: [...this.state.selectedSeats]\r\n        };\r\n        const result = await fetcher('/book-ticket', 'POST', JSON.stringify(body));\r\n        console.log(result);                                        // remove later\r\n        if(!result.success){\r\n           return this.props.history.push('/error');\r\n        }\r\n        // this.props.history.push('/dashboard');\r\n        this.setState({showMsg: true});\r\n    }\r\n\r\n    resetBus = async() => {\r\n        const result = await fetcher('/reset', 'POST', JSON.stringify({\r\n            busId: this.state.busId,\r\n            isAdmin: this.props.userInfo.isAdmin\r\n        }));\r\n        console.log(result);                                        // remove later\r\n        if(!result.success){\r\n            return this.props.history.push('/error');\r\n         }\r\n        //  this.props.history.push('/dashboard');\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const seatsContainer = [];\r\n        let j = 1;\r\n        for(let i=1; i<=48; i++){\r\n            if(i % 3 == 0 && i % 2 != 0)\r\n                seatsContainer.push(<span key={i} className={classes.BlankSeat}></span>)\r\n            else{\r\n                let divClass = this.state.bookedSeatNumbers.includes(j) ? classes.Grey : classes.Indigo; \r\n                seatsContainer.push(\r\n                    <div \r\n                        key={i} \r\n                        id={j}\r\n                        className={divClass}\r\n                        onClick={this.seatClickHandler}>{j}</div>\r\n                );\r\n                j++;\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className={classes.RootContainer}>\r\n                <div className={classes.BusInfoContainer}>\r\n                    <h1>Select Seats</h1>\r\n                    <div className={classes.StatusContainer}>\r\n                        <div>\r\n                            <span className={classes.Indigo} />\r\n                            <p>Available</p>\r\n                        </div>\r\n                        <div>\r\n                            <span className={classes.Grey} style={{backgroundColor: '#d6d6d6'}}/>\r\n                            <p>Reserved</p>\r\n                        </div>\r\n\r\n                        {!(this.props.userInfo && this.props.userInfo.isAdmin) ? (\r\n                            <div>\r\n                                <span className={classes.Blue} />\r\n                                <p>Selected</p>\r\n                            </div>\r\n                        ): null}\r\n                        \r\n                    </div>\r\n                    <div className={classes.DriverSymbol}>\r\n                        <div>\r\n                            <FaBity size={45} /> <br/>\r\n                            <span>Driver</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.SeatsContainer}>\r\n                        {seatsContainer}\r\n                    </div>\r\n                    {(this.props.userInfo && this.props.userInfo.isAdmin) ? (\r\n                        <button onClick={this.resetBus}>\r\n                            Reset        \r\n                        </button>\r\n                    ) : null}\r\n                    \r\n                </div>\r\n                {(this.props.userInfo && this.props.userInfo.isAdmin) && !(this.state.hideUserDetails)? (\r\n                    <div className={classes.PersonDetailsContainer}>\r\n                        <p className={classes.SeatNumber}>{this.state.clickedSeat}</p>\r\n                        {this.state.isBooked ? (\r\n                            <div className={classes.PersonDetails}>\r\n                                <p>Booked By</p>\r\n                                <hr />\r\n                                <div>\r\n                                    <p>Name:  {this.state.bookedBy.name}</p>\r\n                                    <p>E-mail:  {this.state.bookedBy.email}</p>\r\n                                    <p>Gender:  {this.state.bookedBy.gender}</p>\r\n                                    <p>Phone no:  {this.state.bookedBy.phoneNo}</p>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <h2>Not Booked</h2>\r\n                        )}\r\n                        \r\n                    </div>\r\n                ) : null}\r\n                {!(this.props.userInfo && this.props.userInfo.isAdmin) ? (\r\n                    <div className={classes.TicketBookerInfoContainer}>\r\n                        <h2>\r\n                            Details\r\n                        </h2>\r\n                        <div>\r\n                            <p>₹ {300 * this.state.selectedSeats.length}</p>\r\n                            <p> {this.props.userInfo.name}</p>\r\n                            <p>Seats: {this.state.selectedSeats.length}  </p>\r\n                        </div>\r\n                        <button onClick={this.buyTicketHandler}>\r\n                            Buy\r\n                        </button>\r\n                        {this.state.showMsg ? <p\r\n                        style={{marginTop: '15px', color: 'green'}}>Booked Successfully</p> : null}\r\n                    </div>\r\n                ) : null}    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      userInfo: state.auth.userDetails\r\n    }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps)(BusDetails);\r\n\r\n","C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\HomePage\\HomePage.js",[],"C:\\Users\\bharti\\Desktop\\My Projects\\HyperTrip\\frontend\\src\\containers\\MainSection\\MainSection.js",["101"],"\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsSearch, BsCardList } from 'react-icons/bs';\r\nimport { BiPlus } from 'react-icons/bi';\r\n\r\nimport Bus from '../../components/Bus/Bus';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport AddBusForm from '../AddBusForm/AddBusForm';\r\nimport classes from './MainSection.module.css';\r\nimport fetcher from '../../fetchWrapper';\r\n\r\nconst getElements = () => {\r\n    const searchElement = document.getElementById('search');\r\n    const viewElement = document.getElementById('view');\r\n    const addElement = document.getElementById('add');\r\n    return [searchElement, viewElement, addElement];\r\n}\r\n\r\nclass MainSection extends Component{\r\n\r\n    state = {\r\n        onSearchSection: true,\r\n        onViewAllSection: false,\r\n        onAddBusSection: false,\r\n        allBuses: [],\r\n        previousPath: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchAllBuses();\r\n        this.renderProperComponent();\r\n    }\r\n\r\n    renderProperComponent = () => {\r\n        const path = this.props.location.pathname;\r\n        if(path.includes('search'))\r\n            this.searchSectionActiveHandler();\r\n        else if(path.includes('add'))\r\n            this.addBusSectionActiveHandler();\r\n        else\r\n            this.viewAllSectionActiveHandler();\r\n        this.setState({previousPath: path});\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.location.data && this.props.location.data.bus){\r\n            const bus = this.props.location.data.bus;\r\n            this.props.location.data = null;\r\n            const updatedAllBuses = [...this.state.allBuses];\r\n            updatedAllBuses.push(bus);\r\n            this.setState({\r\n                allBuses: updatedAllBuses\r\n            },() => this.viewAllSectionActiveHandler());\r\n        }\r\n        const path = this.props.location.pathname;\r\n        if(this.state.previousPath != path){\r\n            this.setState({previousPath: path});\r\n            this.renderProperComponent();\r\n        }\r\n    }\r\n\r\n    fetchAllBuses = async() => {\r\n        let path;\r\n        if(this.props.userInfo && this.props.userInfo.isAdmin)\r\n            path = '/admin-buses?isAdmin=true';\r\n        else\r\n            path = '/buses';\r\n        const result = await fetcher(path, 'GET');\r\n        console.log(result);                            //remove later\r\n        if(!(result && result.success)){\r\n            console.log(result);\r\n            return this.props.history.push('/error');\r\n        }\r\n        this.setState({allBuses: result.buses});\r\n    }\r\n\r\n    searchSectionActiveHandler = () => {\r\n        const [searchElement, viewElement, addElement] = getElements();\r\n        searchElement.className = classes.ActiveDiv;\r\n        viewElement.className = '';\r\n        if(addElement)\r\n            addElement.className = '';\r\n        this.setState({\r\n            onSearchSection: true,\r\n            onViewAllSection: false,\r\n            onAddBusSection: false\r\n        });\r\n        this.props.history.push('/dashboard/search');\r\n    }\r\n\r\n    viewAllSectionActiveHandler = () => {\r\n        const [searchElement, viewElement, addElement] = getElements();\r\n        searchElement.className = '';\r\n        viewElement.className = classes.ActiveDiv;\r\n        if(addElement)\r\n            addElement.className = '';\r\n        this.setState({\r\n            onSearchSection: false,\r\n            onViewAllSection: true,\r\n            onAddBusSection: false\r\n        });\r\n        this.props.history.push('/dashboard/view-all')\r\n    }\r\n\r\n    addBusSectionActiveHandler = () => {\r\n        const [searchElement, viewElement, addElement] = getElements();\r\n        searchElement.className = '';\r\n        viewElement.className = '';\r\n        addElement.className = classes.ActiveDiv;\r\n        this.setState({\r\n            onSearchSection: false,\r\n            onViewAllSection: false,\r\n            onAddBusSection: true\r\n        })\r\n        this.props.history.push('/dashboard/add');\r\n    }\r\n\r\n    redirectToBusDetails = (bus) => {\r\n        this.props.history.push({\r\n            pathname: '/bus-details/' + bus._id,\r\n            data: bus\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const searchSection = this.state.onSearchSection ? <SearchForm /> : null;\r\n\r\n        const buses = this.state.allBuses.map(bus => {\r\n            return <Bus \r\n                    key={bus._id} \r\n                    bus={bus} \r\n                    clicked={() => this.redirectToBusDetails(bus)}\r\n                    isAdmin={this.props.userInfo.isAdmin}/>\r\n        })\r\n\r\n        const viewAllSection = this.state.onViewAllSection ? buses : null;\r\n\r\n        const addBusSection = this.state.onAddBusSection ? <AddBusForm \r\n            isAdmin={this.props.userInfo.isAdmin}\r\n            viewAll={this.viewAllSectionActiveHandler}/> : null;\r\n\r\n        return (\r\n            <div className={classes.RootContainer}>\r\n                <header>\r\n                    <div onClick={this.searchSectionActiveHandler} id='search'>\r\n                        <BsSearch size={24}/>\r\n                        <h2>Search</h2>\r\n                    </div>\r\n                    <div onClick={this.viewAllSectionActiveHandler} id='view'>\r\n                        <BsCardList size={24} />\r\n                        <h2>View All</h2>\r\n                    </div>\r\n\r\n                    {this.props.userInfo && this.props.userInfo.isAdmin ? (\r\n                        <div onClick={this.addBusSectionActiveHandler} id='add'>\r\n                         <BiPlus size={24} />\r\n                         <h2>Add Bus</h2>\r\n                        </div>\r\n                    ) : null}\r\n                   \r\n                </header>\r\n                <main>\r\n                    {searchSection}\r\n                    {viewAllSection}\r\n                    {addBusSection}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userInfo: state.auth.userDetails\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainSection);",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":32,"nodeType":"108","messageId":"109","endLine":3,"endColumn":40},{"ruleId":"106","severity":1,"message":"110","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":61,"column":36,"nodeType":"113","messageId":"114","endLine":61,"endColumn":38},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"102","replacedBy":"117"},{"ruleId":"104","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":45,"column":36,"nodeType":"113","messageId":"114","endLine":45,"endColumn":38},{"ruleId":"111","severity":1,"message":"119","line":105,"column":22,"nodeType":"113","messageId":"114","endLine":105,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":105,"column":36,"nodeType":"113","messageId":"114","endLine":105,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":57,"column":36,"nodeType":"113","messageId":"114","endLine":57,"endColumn":38},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'HomePage' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["120"],["121"],["120"],["121"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]